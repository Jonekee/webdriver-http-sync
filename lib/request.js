// Generated by CoffeeScript 2.0.0-beta6
void function () {
  var CONNECT_TIMEOUT, extend, getProtocol, getUrlParts, httpsync, makeRequest, parseUrl, TIMEOUT;
  httpsync = require('http-sync');
  extend = require('underscore').extend;
  parseUrl = require('url').parse;
  TIMEOUT = 6e4;
  CONNECT_TIMEOUT = 2e3;
  makeRequest = function (request, data) {
    if (data) {
      return request.end(data);
    } else {
      return request.end();
    }
  };
  getProtocol = function (protocolPart) {
    return protocolPart.replace(/:$/, '');
  };
  getUrlParts = function (url) {
    var parts;
    parts = parseUrl(url);
    return {
      port: parts.port,
      path: parts.path,
      host: parts.hostname,
      protocol: getProtocol(parts.protocol)
    };
  };
  module.exports = function (param$) {
    var cache$, connectTimeout, timeout;
    {
      cache$ = param$;
      timeout = cache$.timeout;
      connectTimeout = cache$.connectTimeout;
    }
    if (null != timeout)
      timeout;
    else
      timeout = TIMEOUT;
    if (null != connectTimeout)
      connectTimeout;
    else
      connectTimeout = CONNECT_TIMEOUT;
    return function (url, method, data) {
      var httpSyncRequest, options;
      if (null == method)
        method = 'get';
      if (null == data)
        data = null;
      options = { method: method };
      options = extend({}, options, getUrlParts(url));
      httpSyncRequest = httpsync.request(options);
      httpSyncRequest.setTimeout(timeout, function () {
        throw new Error('Request timed out after ' + timeout + 'ms to: ' + url);
      });
      httpSyncRequest.setConnectTimeout(connectTimeout, function () {
        throw new Error('Request connection timed out after ' + connectTimeout + 'ms to: ' + url);
      });
      return makeRequest(httpSyncRequest, data);
    };
  };
}.call(this);
