// Generated by CoffeeScript 2.0.0-beta6
void function () {
  var clone, emitter, EventEmitter, json, log, normalizeUrl, parseResponseData, registerEventHandler, verbose;
  json = require('./json');
  parseResponseData = require('./parse_response');
  EventEmitter = require('events').EventEmitter;
  clone = function (object) {
    return json.tryParse(JSON.stringify(object));
  };
  normalizeUrl = function (serverUrl, sessionRoot, url) {
    if (url.indexOf('http') === 0) {
      return url;
    } else {
      return serverUrl + sessionRoot + url;
    }
  };
  emitter = new EventEmitter;
  log = function (message) {
    return emitter.emit('request', message);
  };
  verbose = function (response) {
    var message, parsed;
    parsed = parseResponseData(response);
    message = clone(response);
    message.body = JSON.stringify(parsed);
    return emitter.emit('response', message);
  };
  registerEventHandler = function (event, callback) {
    if (!(event === 'request' || event === 'response'))
      throw new Error("Invalid event name '" + event + "'. The WebDriver http module only emits 'request' and 'response' events.");
    return emitter.on(event, callback);
  };
  module.exports = function (request, serverUrl, sessionId) {
    var del, get, http, post, sessionRoot;
    sessionRoot = '/session/' + sessionId;
    get = function (url) {
      var response;
      url = normalizeUrl(serverUrl, sessionRoot, url);
      log('[WEB] GET ' + url);
      response = request(url);
      verbose(response);
      return response;
    };
    post = function (url, data) {
      var method, response;
      if (null == data)
        data = {};
      url = normalizeUrl(serverUrl, sessionRoot, url);
      method = 'POST';
      data = JSON.stringify(data);
      log('[WEB] POST ' + url + ' : ' + data);
      response = request(url, method, data);
      verbose(response);
      return response;
    };
    del = function (url) {
      var method, response;
      url = normalizeUrl(serverUrl, sessionRoot, url);
      method = 'DELETE';
      log('[WEB] DELETE ' + url);
      response = request(url, method);
      verbose(response);
      return response;
    };
    http = {
      get: get,
      post: post,
      'delete': del,
      on: registerEventHandler
    };
    return http;
  };
}.call(this);
